# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the these branches.
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check out master, for comparison later
      - uses: actions/checkout@v2
        with:
          ref: master

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Debug build
      - name: Cameleon Debug build
        run: make TOOLCHAIN_DIR=~/BR/HOST/usr/bin/ KERNEL_DIR=~/BR/KERNEL VS_CONFIG=Debug CFLAGS="-fsanitize=undefined -std=gnu11 -g3 -O0 -static -Wall -Werror" LDFLAGS="-pthread -lm -lubsan -Wall"
        working-directory: ./userspace

      # Clean debug build artifacts
      - name: Clean debug build artifacts
        run: rm *.o cameleon
        working-directory: ./userspace

      # Release build
      - name: Cameleon Release build
        run: make TOOLCHAIN_DIR=~/BR/HOST/usr/bin/ KERNEL_DIR=~/BR/KERNEL
        working-directory: ./userspace

      # Static analysis
      - name: Static analysis
        run: |
          bash .github/workflows/clang-tidy-lint.sh | tee static-analysis.txt

      # Format the result of the static analysis for the commit-comment action
      - id: get-comment-body
        run: |
          body=$(cat static-analysis.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body
          shouldcomment=$(grep --quiet "No relevant changes found" static-analysis.txt || [[ `tr -d "\r\n" <  static-analysis.txt | wc -c` == 0 ]] || echo true)
          echo ::set-output name=shouldcomment::$shouldcomment

      - name: Add static analysis comment
        if: steps.get-comment-body.outputs.shouldcomment
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            ```
            ${{ steps.get-comment-body.outputs.body }}
            ```
